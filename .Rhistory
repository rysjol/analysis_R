install.packages("eurostat", dependencies="true")
install.packages("eurostat")
install.packages("eurostat", dependencies=TRUE)
install.packages("eurostat")
install.packages("eurostat")
install.packages("eurostat")
install.packages("eurostat")
install.packages("broom")
install.packages("broom", dependencies=TRUE)
install.packages("eurostat", dependencies=TRUE)
install.packages("svglite")
install.packages("svglite")
install.packages("eurostat", dependencies=TRUE)
install.packages("mapview")
install.packages("eurostat", dependencies=TRUE)
install.packages("Cairo")
install.packages("broom")
install.packages("broom", dependencies=TRUE)
install.packages("gmp")
install.packages("gmp", dependencies=true)
install.packages("gmp", dependencies=TRUE)
install.packages("Rmpf")
install.packages("Rmpfr")
install.packages("Rmpfr", dependencies=TRUE)
install.packages("eurostat", dependencies=TRUE)
library("eurostat")
library("ggplot2")
library("dplyr")
library("shiny")
query <- search_eurostat("death", type="table")
dat_raw <- get_eurostat(id="crim_pris_age", time_format = "num")
#dat_raw <- get_eurostat(id="tps00152", time_format = "num")
dat_raw_def <- label_eurostat(dat_raw)
#head(dat_raw)
#summary(dat_raw)
#ggplot(dat_raw, aes(x = time, y = values, group = geo)) + geom_point(size = 2) + geom_line() + theme_bw() +  labs(title="X", x = "Year", y = "Victims")
#t2 <- dat_raw %>% filter(time == "2016", unit == "NR")
#ggplot(t2, aes(geo, values, fill = geo)) + geom_bar(stat = "identity") + theme_bw() + labs(title = "", x = "city", y="value")
install.packages("eurostat")
library("eurostat")
library("ggplot2")
library("dplyr")
library("shiny")
query <- search_eurostat("death", type="table")
dat_raw <- get_eurostat(id="crim_pris_age", time_format = "num")
#dat_raw <- get_eurostat(id="tps00152", time_format = "num")
dat_raw_def <- label_eurostat(dat_raw)
#tabela z danymi numerycznymi
dat_number <- subset(dat_raw_def, unit=="Number" & geo==list("Cyprus") & sex==list("Females"))
#tabela z danymi "na tysiac"
dat_per_thousand <- subset(dat_raw_def, unit=="Per hundred thousand inhabitants")
#tabela numeryczna z zadanymi panstwami
dat_number_panstwo <- subset(dat_number,  geo==c("Albania"))
#tabela z danymi "na tysiac" z zadanymi panstwami
dat_per_thousand_panstwo <- subset(dat_per_thousand,  geo==c("Albania", "Cyprus"))
ggplot(dat_number, aes(x = time, y = values, colour=age )) +
geom_point() + geom_smooth(alpha=0.4, se = FALSE)
#head(dat_raw)
ggplot(dat_number, aes(x = time, y = values)) + geom_point() + geom_smooth()
#fajny wykres ->>>
ggplot(dat_number, aes(x = time, y = values, color=geo)) + geom_smooth()
ggplot(dat_number, aes(x = time, y = values, color=geo)) + geom_point(alpha=0.4)
summary(dat_raw_def)
#ggplot(dat_raw, aes(x = time, y = values, group = geo)) + geom_point(size = 2) + geom_line() + theme_bw() +  labs(title="X", x = "Year", y = "Victims")
#t2 <- dat_raw %>% filter(time == "2016", unit == "NR")
#ggplot(t2, aes(geo, values, fill = geo)) + geom_bar(stat = "identity") + theme_bw() + labs(title = "", x = "city", y="value")
hist(dat_raw$time)
library("eurostat")
library("ggplot2")
library("dplyr")
library("shiny")
query <- search_eurostat("death", type="table")
dat_raw <- get_eurostat(id="crim_pris_age", time_format = "num")
#dat_raw <- get_eurostat(id="tps00152", time_format = "num")
dat_raw_def <- label_eurostat(dat_raw)
#tabela z danymi numerycznymi
dat_number <- subset(dat_raw_def, unit=="Number" & geo==list("Cyprus") & sex==list("Females"))
#tabela z danymi "na tysiac"
dat_per_thousand <- subset(dat_raw_def, unit=="Per hundred thousand inhabitants")
#tabela numeryczna z zadanymi panstwami
dat_number_panstwo <- subset(dat_number,  geo==c("Albania"))
#tabela z danymi "na tysiac" z zadanymi panstwami
dat_per_thousand_panstwo <- subset(dat_per_thousand,  geo==c("Albania", "Cyprus"))
ggplot(dat_number, aes(x = time, y = values, colour=age )) +
geom_point() + geom_smooth(alpha=0.4, se = FALSE)
#head(dat_raw)
ggplot(dat_number, aes(x = time, y = values)) + geom_point() + geom_smooth()
#fajny wykres ->>>
ggplot(dat_number, aes(x = time, y = values, color=geo)) + geom_smooth()
ggplot(dat_number, aes(x = time, y = values, color=geo)) + geom_point(alpha=0.4)
summary(dat_raw_def)
#ggplot(dat_raw, aes(x = time, y = values, group = geo)) + geom_point(size = 2) + geom_line() + theme_bw() +  labs(title="X", x = "Year", y = "Victims")
#t2 <- dat_raw %>% filter(time == "2016", unit == "NR")
#ggplot(t2, aes(geo, values, fill = geo)) + geom_bar(stat = "identity") + theme_bw() + labs(title = "", x = "city", y="value")
hist(dat_raw$time)
library("eurostat")
# libraries
library(ggplot2)
library(dplyr)
install.packages("ggplot2")
install.packages("ggplot2")
# libraries
library(ggplot2)
library(dplyr)
library(lubridate)
# reading the data
av = read.csv('../avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
# libraries
library(ggplot2)
library(dplyr)
library(lubridate)
# reading the data
av = read.csv('../avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
getwd()
setwd("/home/wojtek/ed_laby")
# reading the data
av = read.csv('../avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
getwd()
# reading the data
av = read.csv('/hom/wojtek/ed_laby/avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
# reading the data
av = read.csv('/home/wojtek/ed_laby/avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
# reading the data
av = read.csv('avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
# libraries
library(ggplot2)
library(dplyr)
library(lubridate)
# reading the data
av = read.csv('avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
# finding regions with different prices
av %>% group_by(region) %>%
summarise(price = mean(AveragePrice)) -> avReg
avReg <- avReg[order(avReg$price),]
# extracting regions names
regList <- lapply(avReg$region, as.character)
# Number of regions to analyze
n <- 3
# extracting exactl region names (always the first and the last)
reg <- regList[1]
for (i in 2:(n-1)){
reg[i] <- regList[(i-1)*floor(length(regList)/(n-1))]
}
reg[n] <- regList[length(regList)]
# creating new limited data frame
avLimited <- av[av$region %in% reg,]
# extracting data for the plot
avLimited %>% group_by(month = floor_date(Date, "month"), type, region) %>%
summarize(price = mean(AveragePrice)) -> avAg
# plot :)
ggplot(data = avAg, aes(x = month, y = price, col = region, shape = type)) + geom_point() + geom_line(size = 0.1)
# finding regions with different prices
av %>% group_by(region) %>%
summarise(price = mean(AveragePrice)) -> avReg
r
# finding regions with different prices
av %>% group_by(region) %>% summarise(price = mean(AveragePrice)) -> avReg
# reading the data
av = read.csv('avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
# finding regions with different prices
av %>% group_by(region) %>% summarise(price = mean(AveragePrice)) -> avReg
es
library(ggplot2)
library(dplyr)
library(lubridate)
# reading the data
av = read.csv('../avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
getwd()
# reading the data
av = read.csv('avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
2
# libraries
library(ggplot2)
library(dplyr)
library(lubridate)
# reading the data
av = read.csv('avocado.csv', colClasses = c('numeric', 'Date', 'numeric', 'numeric', 'numeric',
'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric',
'factor','numeric','factor'))
# finding regions with different prices
av %>% group_by(region) %>%
summarise(price = mean(AveragePrice)) -> avReg
installed.packages("lubridate")
# finding regions with different prices
av %>% group_by(region) %>%
summarise(price = mean(AveragePrice)) -> avReg
install.packages("lubridate")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr", dependencies=TRUE
)
# libraries
library(ggplot2)
library(dplyr)
